---
  - block: #======For RedHat ========#  
      - name: install nginx for RedHat
        yum: name=nginx state=latest
        notify: nginx start

      - name: install php for RedHat
        yum: name=php state=latest

      - name: install MariaDB for RedHat
        yum: name=mariadb-server state=latest
        notify: mariadb start

      - name: install php-fpm for RedHat
        yum: name=php-fpm state=latest
        notify: php-fpm start

      - name: copy the nginx default for RedHat
        template:
          src: /etc/ansible/roles/ansible-lemp-1604/files/default.j2
          dest: /etc/nginx/conf.d/default.conf
        become: yes

      - name: copy the nginx.conf for RedHat
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/nginx.conf
          dest: /etc/nginx/nginx.conf
        become: yes

      - name: copying t.php file for phpinfo
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/t.php
          dest: /var/www/html/
        become: yes
    when: ansible_os_family == "RedHat"

  - block: #======For Debian ========#
      - apt_repository:
          repo: ppa:ondrej/php

      - name: apt update
        apt: update_cache=yes

      - name: Install php-fpm 7.0/7.1/7.2/7.3
        apt:
          name: "{{ packages }}"
        vars:
          packages:
            - nginx
            - php7.0
            - php7.1
            - php7.2
            - php7.3
            - php7.0-fpm
            - php7.1-fpm
            - php7.2-fpm
            - php7.3-fpm
        notify: Install php modules 7.0/7.1/7.2/7.3

      - name: Creates directory /var/www/html/php73/root
        file:
          path: /var/www/html/php73/root
          state: directory
          mode: 0775

      - name: install mysql-server for Debian
        apt: name=mysql-server state=latest update_cache=yes
        notify: mysql start

      - name: copy the nginx config fie for default php7.2
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/ubuntu/default
          dest: /etc/nginx/sites-available/default
        become: yes

      - name: copying nginx config file for php7.3
        template:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/ubuntu/php73.j2
          dest: /etc/nginx/sites-available/php73
        become: yes

      - name: copying nginx config file for php7.0
        template:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/ubuntu/php70.j2
          dest: /etc/nginx/sites-available/php70
        become: yes

      - name: copying nginx config file for php7.1
        template:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/ubuntu/php71.j2
          dest: /etc/nginx/sites-available/php71
        become: yes

      - name: create symlink for php71
        file:
          src: /etc/nginx/sites-available/php71
          dest: /etc/nginx/sites-enabled/php71
          state: link

      - name: create symlink for php70
        file:
          src: /etc/nginx/sites-available/php70
          dest: /etc/nginx/sites-enabled/php70
          state: link

      - shell: "php -n -v | head -n 1 | cut -d ' ' -f 2 | cut -d '.' -f 1,2"
        register: php_version
      - lineinfile:
          dest: /etc/nginx/sites-available/default
          regexp: "^fastcgi_pass unix:"
          insertafter: "^include snippets/fastcgi-php.conf;"
          line: "fastcgi_pass unix:/var/run/php/php{{ php_version.stdout }}-fpm.sock;"

      - name: copying 1.php file for default php7.2
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/1.php
          dest: /var/www/html/
        become: yes

      - name: copying 1.php file for php7.3
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/1.php
          dest: /var/www/html/php73/root/
        become: yes

      - name: copying 1.php file for php7.1
        copy:
          src: /etc/ansible/roles/ansible-lemp-16-04/files/1.php
          dest: /var/www/html/php71/root/
        become: yes

      - name: service nginx reload
        service:
          name: nginx
          state: reloaded
    when: ansible_os_family == "Debian"
